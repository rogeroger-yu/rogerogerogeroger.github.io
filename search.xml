<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>array</title>
      <link href="/Interview/Algorithm/array/"/>
      <url>/Interview/Algorithm/array/</url>
      
        <content type="html"><![CDATA[<h2 id="1-二维数组的查找"><a href="#1-二维数组的查找" class="headerlink" title="1. 二维数组的查找"></a>1. 二维数组的查找</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>一上来想到的方法是，先按第一列做查找，找到行首比该数字小的最大一行，就是该数字所在的行，然后按这一行做查找，找到该数字所在的列。这个想法是错误的，因为根本没有认真审题，没有理解题中给出的是什么样的数组。</p><p><code>每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序</code>，数组可能是这样的：</p><pre><code>1    2    8    92    4    9    124    7    10    136    8    11    15</code></pre><p>在没有具体给出一个数组的情况下，光看文字着急去空想，错误的方法显然是把整个二维数组当作有序，也就是按从左到右从上到下顺序读一遍的有序。</p><p>正确的解法是，从某一个角开始查找，然后指针向两个方向移动。如果从左上角开始，由于current &lt; target时，向右向下都更大，会有歧义（从右下角开始同理），如果从左下角开始，当current &lt; target时，说明应当向右移动一格，当current &gt; target时，说明应当向上移动一格，没有歧义。（从右上角开始同理）</p><h3 id="Python3代码"><a href="#Python3代码" class="headerlink" title="Python3代码"></a>Python3代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Find</span><span class="params">(self, target, array)</span>:</span></span><br><span class="line">        <span class="comment"># write code here</span></span><br><span class="line">        <span class="keyword">if</span> target <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> array <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        col = <span class="number">0</span></span><br><span class="line">        row = len(array)<span class="number">-1</span></span><br><span class="line">        <span class="keyword">while</span> row &gt;= <span class="number">0</span> <span class="keyword">and</span> col &lt; len(array[<span class="number">0</span>]):</span><br><span class="line">            <span class="keyword">if</span> target == array[row][col]:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">elif</span> target &gt; array[row][col]:</span><br><span class="line">                col += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> target &lt; array[row][col]:</span><br><span class="line">                row -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="2-将数组分成和相等的三部分"><a href="#2-将数组分成和相等的三部分" class="headerlink" title="2. 将数组分成和相等的三部分"></a>2. 将数组分成和相等的三部分</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个整数数组 A，只有我们可以将其划分为三个和相等的非空部分时才返回 true，否则返回 false。</p><p>形式上，如果我们可以找出索引 i+1 &lt; j 且满足 (A[0] + A[1] + … + A[i] == A[i+1] + A[i+2] + … + A[j-1] == A[j] + A[j-1] + … + A[A.length - 1]) 就可以将数组三等分。</p><p>提示<br>3 &lt;= A.length &lt;= 50000<br>-10000 &lt;= A[i] &lt;= 10000</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ul><li><p>示例 1</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输出：[<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">-6</span>,<span class="number">6</span>,<span class="number">-7</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">输出：<span class="literal">true</span></span><br><span class="line">解释：<span class="number">0</span> + <span class="number">2</span> + <span class="number">1</span> = <span class="number">-6</span> + <span class="number">6</span> - <span class="number">7</span> + <span class="number">9</span> + <span class="number">1</span> = <span class="number">2</span> + <span class="number">0</span> + <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>示例 2</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：[<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">-6</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">-1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">输出：<span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>示例 3</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：[<span class="number">3</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">-2</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">-9</span>,<span class="number">4</span>]</span><br><span class="line">输出：<span class="literal">true</span></span><br><span class="line">解释：<span class="number">3</span> + <span class="number">3</span> = <span class="number">6</span> = <span class="number">5</span> - <span class="number">2</span> + <span class="number">2</span> + <span class="number">5</span> + <span class="number">1</span> - <span class="number">9</span> + <span class="number">4</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><ol><li>判断数组和是否整除3，否则返回；</li><li>平均数avg=sum/3;</li><li>从左往右遍历和保证 左和==avg;</li><li>从右往左遍历和保证 右和==avg;</li><li>确保右指针-左指针&gt;1,保证第三部分有值；</li><li>若avg为0，需要考虑；</li></ol><h3 id="Python3代码-1"><a href="#Python3代码-1" class="headerlink" title="Python3代码"></a>Python3代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">canThreePartsEqualSum</span><span class="params">(self, A: List[int])</span> -&gt; bool:</span></span><br><span class="line">        list_sum = sum(A)</span><br><span class="line">        <span class="keyword">if</span> list_sum % <span class="number">3</span> != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">        avg = list_sum / <span class="number">3</span></span><br><span class="line"></span><br><span class="line">        left_ptr, right_ptr = <span class="number">1</span>, len(A) - <span class="number">2</span></span><br><span class="line">        left_sum, right_sum = A[<span class="number">0</span>], A[<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> left_sum != avg:</span><br><span class="line">            <span class="keyword">if</span> left_ptr &gt; right_ptr:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            left_sum += A[left_ptr]</span><br><span class="line">            left_ptr += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> right_sum != avg:</span><br><span class="line">            <span class="keyword">if</span> left_ptr &gt; right_ptr:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            right_sum += A[right_ptr]</span><br><span class="line">            right_ptr -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (right_ptr - left_ptr + <span class="number">2</span>) &gt; <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="3-两数之和"><a href="#3-两数之和" class="headerlink" title="3. 两数之和"></a>3. 两数之和</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><p>给定 nums = [2, 7, 11, 15], target = 9</p><p>因为 nums[0] + nums[1] = 2 + 7 = 9<br>所以返回 [0, 1]</p><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><ul><li>空间换取时间，遍历，判断target-num[i]是否存在，若存在则返回;</li><li>由于只会对应一个答案，当有重复值被覆盖，值为新值索引，依然有效</li></ul><h3 id="Python3代码-2"><a href="#Python3代码-2" class="headerlink" title="Python3代码"></a>Python3代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums: List[int], target: int)</span> -&gt; List[int]:</span></span><br><span class="line">        dic = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i, value <span class="keyword">in</span> enumerate(nums):</span><br><span class="line">            <span class="keyword">if</span> target - value <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">return</span> [dic[target - value], i]</span><br><span class="line">            dic[value] = i</span><br></pre></td></tr></table></figure><h2 id="4-元素和为目标值的子矩阵数量"><a href="#4-元素和为目标值的子矩阵数量" class="headerlink" title="4. 元素和为目标值的子矩阵数量"></a>4. 元素和为目标值的子矩阵数量</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>给出矩阵 matrix 和目标值 target，返回元素总和等于目标值的非空子矩阵的数量。</p><p>子矩阵 x1, y1, x2, y2 是满足 x1 &lt;= x &lt;= x2 且 y1 &lt;= y &lt;= y2 的所有单元 matrix[x][y] 的集合。</p><p>如果 (x1, y1, x2, y2) 和 (x1’, y1’, x2’, y2’) 两个子矩阵中部分坐标不同（如：x1 != x1’），那么这两个子矩阵也不同。</p><p><strong>提示：</strong></p><ul><li>1 &lt;= matrix.length &lt;= 300</li><li>1 &lt;= matrix[0].length &lt;= 300</li><li>-1000 &lt;= matrix[i] &lt;= 1000</li><li>-10^8 &lt;= target &lt;= 10^8</li></ul><h3 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h3><ol><li><p>输入：matrix = [[0,1,0],[1,1,1],[0,1,0]], target = 0</p><ul><li>输出：4</li><li>解释：四个只含 0 的 1x1 子矩阵。</li></ul></li><li><p>输入：matrix = [[1,-1],[-1,1]], target = 0</p><ul><li>输出：5</li><li>解释：两个 1x2 子矩阵，加上两个 2x1 子矩阵，再加上一个 2x2 子矩阵。`</li></ul></li></ol><h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h3><ol><li>暴力题解<ul><li>以左上角点为起点，找到以该点为矩阵起点的各个矩阵，逐个遍历，</li></ul></li><li><strong>以矩阵为单位处理（自解）</strong><ul><li>1×1矩阵、1×2、1×3、2×1、2×2、2×3…</li><li>找出矩阵起始位置，计算矩阵和</li></ul></li></ol><h3 id="Python3代码-3"><a href="#Python3代码-3" class="headerlink" title="Python3代码"></a>Python3代码</h3><h4 id="暴力题解"><a href="#暴力题解" class="headerlink" title="暴力题解"></a>暴力题解</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">numSubmatrixSumTarget</span><span class="params">(matrix,target)</span>:</span></span><br><span class="line">    row = len(matrix)</span><br><span class="line">    col = len(matrix[<span class="number">0</span>])</span><br><span class="line">    res = []</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,row):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,col):</span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> range (i,row):</span><br><span class="line">                <span class="keyword">for</span> q <span class="keyword">in</span> range(j,col):</span><br><span class="line">                    sum = <span class="number">0</span></span><br><span class="line">                    <span class="comment">#就算从i,j到p,q矩阵数值和</span></span><br><span class="line">                    <span class="keyword">for</span> x <span class="keyword">in</span> range(i,p+<span class="number">1</span>):</span><br><span class="line">                        <span class="keyword">for</span> y <span class="keyword">in</span> range(j,q+<span class="number">1</span>):</span><br><span class="line">                            sum = matrix[x][y] +sum </span><br><span class="line">                    res.append(sum)</span><br><span class="line">    <span class="keyword">for</span> w <span class="keyword">in</span> res:</span><br><span class="line">        <span class="keyword">if</span> w == target:</span><br><span class="line">            count +=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> count</span><br></pre></td></tr></table></figure><h4 id="按矩阵遍历"><a href="#按矩阵遍历" class="headerlink" title="按矩阵遍历"></a>按矩阵遍历</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numSubmatrixSumTarget</span><span class="params">(self, matrix: List[List[int]], target: int)</span> -&gt; int:</span></span><br><span class="line">        row = len(matrix)</span><br><span class="line">        col = len(matrix[<span class="number">0</span>])</span><br><span class="line">        res = []</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> range(<span class="number">0</span>, row):</span><br><span class="line">            <span class="keyword">for</span> h <span class="keyword">in</span> range(<span class="number">0</span>, col):</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, row*col):</span><br><span class="line">                    x_i = i % row</span><br><span class="line">                    y_i = i // row</span><br><span class="line">                    x_j = x_i + w</span><br><span class="line">                    y_j = y_i + h</span><br><span class="line">                    <span class="keyword">if</span> x_j &gt; row - <span class="number">1</span> <span class="keyword">or</span> y_j &gt; col <span class="number">-1</span>:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    sum = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> x <span class="keyword">in</span> range(x_i, x_j+<span class="number">1</span>):</span><br><span class="line">                        <span class="keyword">for</span> y <span class="keyword">in</span> range(y_i, y_j+<span class="number">1</span>):</span><br><span class="line">                            sum = matrix[x][y] + sum</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> sum == target:</span><br><span class="line">count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> count</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">numSubmatrixSumTarget</span><span class="params">(<span class="keyword">int</span>** matrix, <span class="keyword">int</span> matrixSize, <span class="keyword">int</span>* matrixColSize, <span class="keyword">int</span> target)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> w,h,i,j,x_i,x_j,y_i,y_j,x,y;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(w = <span class="number">0</span>; w &lt; matrixSize; w ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(h = <span class="number">0</span>; h &lt; *matrixColSize; h++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; *matrixColSize * matrixSize; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                x_i = i % matrixSize;</span><br><span class="line">                y_i = i / matrixSize;</span><br><span class="line">                x_j = x_i + w;</span><br><span class="line">                y_j = y_i + h;</span><br><span class="line">                <span class="keyword">if</span>(x_j &gt; matrixSize - <span class="number">1</span> || y_j &gt; *matrixColSize <span class="number">-1</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (x = x_i; x &lt; x_j + <span class="number">1</span>; x++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span> (y = y_i; y &lt; y_j + <span class="number">1</span>; y++)</span><br><span class="line">                        sum = matrix[x][y];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (sum == target)</span><br><span class="line">                    count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-字符串的最大公因子"><a href="#5-字符串的最大公因子" class="headerlink" title="5. 字符串的最大公因子"></a>5. 字符串的最大公因子</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>对于字符串 S 和 T，只有在 S = T + … + T（T 与自身连接 1 次或多次）时，我们才认定 “T 能除尽 S”。</p><p>返回最长字符串 X，要求满足 X 能除尽 str1 且 X 能除尽 str2。</p><p>提示：</p><p>1 &lt;= str1.length &lt;= 1000<br>1 &lt;= str2.length &lt;= 1000<br>str1[i] 和 str2[i] 为大写英文字母</p><h3 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h3><p>示例 1：</p><ul><li>输入：str1 = “ABCABC”, str2 = “ABC”</li><li>输出：”ABC”</li></ul><p>示例 2：</p><ul><li>输入：str1 = “ABABAB”, str2 = “ABAB”</li><li>输出：”AB”</li></ul><p>示例 3：</p><ul><li>输入：str1 = “LEET”, str2 = “CODE”</li><li>输出：””</li></ul><p>示例 3：</p><ul><li>输入：str1 = “ABABAB”, str2 = “ABAB”</li><li>输出：“AB”</li></ul><h3 id="Python3代码-4"><a href="#Python3代码-4" class="headerlink" title="Python3代码"></a>Python3代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gcdOfStrings</span><span class="params">(self, str1: str, str2: str)</span> -&gt; str:</span></span><br><span class="line">        m, n = len(str1), len(str2)</span><br><span class="line">        <span class="keyword">if</span> str1 + str2 != str2 + str1:</span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> a <span class="keyword">if</span> b == <span class="number">0</span> <span class="keyword">else</span> gcd(b, a % b)</span><br><span class="line">        <span class="keyword">return</span> str1[:gcd(m, n)]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Interview </category>
          
          <category> Algorithm </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python基础问题解析</title>
      <link href="/Interview/Basicknowledge/Python%E5%9F%BA%E7%A1%80%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/"/>
      <url>/Interview/Basicknowledge/Python%E5%9F%BA%E7%A1%80%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h2><ol><li><p>列出 5 个常用 Python 标准库？</p><ul><li>time</li><li>os</li><li>queue</li></ul></li><li><p>Python 内建数据类型有哪些？</p><ul><li>不可变数据（3个）：Number（数字）、String（字符串）、Tuple（元组）</li><li>可变数据（3个）：List（列表）、Dictionary（字典）、Set（集合）</li></ul></li><li><p>简述 with 方法打开处理文件帮我我们做了什么?<br> with 语句适用于对资源进行访问的场合，确保不管使用过程中是否发生异常都会执行必要的“清理”操作，释放资源，比如文件使用后自动关闭／线程中锁的自动获取和释放等</p></li><li><p>Python 获取当前日期？</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化成2016-03-20 11:45:39形式</span></span><br><span class="line"><span class="keyword">print</span> time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化成Sat Mar 28 22:24:24 2016形式</span></span><br><span class="line"><span class="keyword">print</span> time.strftime(<span class="string">"%a %b %d %H:%M:%S %Y"</span>, time.localtime()) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将格式字符串转换为时间戳</span></span><br><span class="line">a = <span class="string">"Sat Mar 28 22:24:24 2016"</span></span><br><span class="line"><span class="keyword">print</span> time.mktime(time.strptime(a,<span class="string">"%a %b %d %H:%M:%S %Y"</span>))</span><br></pre></td></tr></table></figure><p> 输出如下：</p><ul><li>2016-04-07 10:25:09</li><li>Thu Apr 07 10:25:09 2016</li><li>1459175064.0</li></ul></li><li><p>统计字符串每个单词出现的次数</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'Hello world'</span>.count(<span class="string">'l'</span>)</span><br></pre></td></tr></table></figure></li><li><p>用 python 删除文件和用 linux 命令删除文件方法</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">file = <span class="string">'/root/test_file'</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(file):</span><br><span class="line">os.remove(file)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">'No such file: %s'</span>, file)</span><br></pre></td></tr></table></figure></li><li><p>举例说明异常模块中 try except else finally 的相关意义</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   Normal execution block</span><br><span class="line"><span class="keyword">except</span> A:</span><br><span class="line">   Exception A handle</span><br><span class="line"><span class="keyword">except</span> B:</span><br><span class="line">   Exception B handle</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">   Other exception handle</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="keyword">if</span> no exception,get here</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">   print(<span class="string">"finally"</span>)</span><br></pre></td></tr></table></figure></li><li><p>遇到 bug 如何处理</p><ul><li>定位bug位置</li><li>分析bug原因</li><li>解决bug</li></ul></li></ol><h2 id="语言特性"><a href="#语言特性" class="headerlink" title="语言特性"></a>语言特性</h2><ol><li><p>谈谈对 Python 和其他语言的区别</p></li><li><p>简述解释型和编译型编程语言</p></li><li><p>Python 的解释器种类以及相关特点？</p><table><thead><tr><th>解释器种类</th><th>特点</th></tr></thead><tbody><tr><td>CPython</td><td>c语言开发的 使用最广的解释器</td></tr><tr><td>IPython</td><td>基于cpython之上的一个交互式计时器 交互方式增强 功能和cpython一样</td></tr><tr><td>PyPy</td><td>目标是执行效率 采用JIT技术 对python代码进行动态编译，提高执行效率</td></tr><tr><td>JPython</td><td>运行在Java上的解释器 直接把python代码编译成Java字节码执行</td></tr><tr><td>IronPython</td><td>运行在微软 .NET 平台上的解释器，把python编译成. NET 的字节码</td></tr></tbody></table></li><li><p>说说你知道的Python3 和 Python2 之间的区别？</p><ul><li>print操作  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python2</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"test"</span></span><br><span class="line">print(<span class="string">"test"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python3</span></span><br><span class="line">print(<span class="string">"test"</span>)</span><br></pre></td></tr></table></figure></li><li>Unicode  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python2</span></span><br><span class="line">str = <span class="string">"测试"</span></span><br><span class="line"><span class="comment"># str = '\xe6\xb5\x8b\xe8\xaf\x95'</span></span><br><span class="line">str = <span class="string">u"测试"</span></span><br><span class="line"><span class="comment"># str = u'\u6d4b\u8bd5'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Python3</span></span><br><span class="line">str = <span class="string">"测试"</span></span><br><span class="line"><span class="comment"># str = '测试'</span></span><br></pre></td></tr></table></figure></li><li>除法  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python2</span></span><br><span class="line"><span class="comment"># 1/2 = 0</span></span><br><span class="line"><span class="comment"># 1.0/2 = 0.5</span></span><br><span class="line"><span class="comment"># Python3</span></span><br><span class="line"><span class="comment"># 1/2 = 0.5</span></span><br></pre></td></tr></table></figure></li><li>数据类型<ul><li>python3去除了long类型，只有int型</li><li>新增了bytes类型，str 对象和 bytes 对象可以使用 .encode() (str -&gt; bytes) 或 .decode() (bytes -&gt; str)方法相互转化</li><li>dict的.keys()、.items() 和.values()方法返回迭代器，而之前的iterkeys()等函数都被废弃。同时去掉的还有 dict.has_key()，用 in替代</li></ul></li></ul></li><li><p>xrange 和 range 的区别？<br> range返回list，xrange返回生成器（以避免生成很大序列时无需初始开辟一大块空间）</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># range:</span></span><br><span class="line"></span><br><span class="line">range(<span class="number">5</span>)</span><br><span class="line"><span class="comment"># [0, 1, 2, 3, 4]</span></span><br><span class="line">range(<span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line"><span class="comment"># [1, 2, 3, 4]</span></span><br><span class="line">range(<span class="number">0</span>, <span class="number">6</span>, <span class="number">2</span>)</span><br><span class="line"><span class="comment"># [0, 2, 4]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># xrange:</span></span><br><span class="line">xrange(<span class="number">5</span>)</span><br><span class="line"><span class="comment"># xrange(5)</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="编码规范"><a href="#编码规范" class="headerlink" title="编码规范"></a>编码规范</h2><ol start="6"><li>什么是 PEP8?</li><li>了解 docstring 么？</li><li>了解类型注解么？</li><li>例举你知道 Python 对象的命名规范，例如方法或者类等</li><li>Python 中的注释有几种？</li><li>如何优雅的给一个函数加注释？</li><li>如何给变量加注释？</li><li>Python 代码缩进中是否支持 Tab 键和空格混用。</li><li>是否可以在一句 import 中导入多个库?</li><li>在给 Py 文件命名的时候需要注意什么?</li><li>例举几个规范 Python 代码风格的工具</li></ol><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ol start="19"><li>列举 Python 中的基本数据类型？</li><li>如何区别可变数据类型和不可变数据类型</li><li>将”hello world”转换为首字母大写”Hello World”</li><li>如何检测字符串中只含有数字?</li><li>将字符串”ilovechina”进行反转</li><li>Python 中的字符串格式化方式你知道哪些？</li><li>有一个字符串开头和末尾都有空格，比如“ adabdw ”,要求写一个函数把这个字符串的前后空格都去掉。</li><li>获取字符串”123456“最后的两个字符。</li><li>一个编码为 GBK 的字符串 S，要将其转成 UTF-8 编码的字符串，应如何操作？</li><li>s=”info：xiaoZhang 33 shandong”，用正则切分字符串输出[‘info’, ‘xiaoZhang’, ‘33’, ‘shandong’] </li><li>a = “你好 中国 “，去除多余空格只留一个空格。</li><li>怎样将字符串转换为小写</li><li>单引号、双引号、三引号的区别？</li></ol><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><ol start="30"><li>已知 AList = [1,2,3,1,2],对 AList 列表元素去重，写出具体过程。</li><li>如何实现 “1,2,3” 变成 [“1”,”2”,”3”]</li><li>给定两个 list，A 和 B，找出相同元素和不同元素</li><li>[[1,2],[3,4],[5,6]]一行代码展开该列表，得出[1,2,3,4,5,6]</li><li>合并列表[1,5,7,9]和[2,2,6,8]</li><li>如何打乱一个列表的元素？</li></ol><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><ol start="36"><li>字典操作中del和pop有什么区别</li><li>按照下面字典内的年龄排序<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d1 = [&#123;<span class="string">'name'</span>: <span class="string">'Alice'</span>, <span class="string">'age'</span>: <span class="number">38</span>&#125;,</span><br><span class="line">  &#123;<span class="string">'name'</span>: <span class="string">'Bob'</span>, <span class="string">'age'</span>: <span class="number">18</span>&#125;,</span><br><span class="line">  &#123;<span class="string">'name'</span>: <span class="string">'Carl'</span>, <span class="string">'age'</span>: <span class="number">28</span>&#125;,]</span><br></pre></td></tr></table></figure></li><li>请合并下面两个字典a = {‘A’: 1, ‘B’: 2}, b = {‘C’: 3, ‘D’: 4}</li><li>如何使用生成式的方式生成一个字典，写一段功能代码。</li><li>如何把元组(“a”,”b”)和元组(1,2)，变为字典{“a”:1,”b”:2}</li></ol><h3 id="综合"><a href="#综合" class="headerlink" title="综合"></a>综合</h3><ol start="41"><li><p>Python 常用的数据结构的类型及其特性？</p></li><li><p>如何交换字典{‘A’: 1, ‘B’: 2}的键和值？</p></li><li><p>Python如何实现tuple和list的转换？</p></li><li><p>我们知道对于列表可以使用切片操作进行部分元素的选择，那么如何对生成器类型的对象实现相同的功能呢？</p></li><li><p>请将[i for i in range(3)]改成生成器</p></li><li><p>a=”hello”和 b=”你好”编码成 bytes 类型</p></li><li><p>下面的代码输出结果是什么？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>],<span class="number">8</span>)</span><br><span class="line">a[<span class="number">2</span>] = <span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>下面的代码输出的结果是什么？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>],<span class="number">8</span>)</span><br><span class="line">a[<span class="number">3</span>][<span class="number">0</span>] = <span class="number">2</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="操作类"><a href="#操作类" class="headerlink" title="操作类"></a>操作类</h2><ol start="49"><li>Python 交换两个变量的值</li><li>在读文件操作的时候会使用 read、readline 或者 readlines，简述它们各自的作用</li><li>json 序列化时，可以处理的数据类型有哪些？如何定制支持 datetime 类型？</li><li>json 序列化时，默认遇到中文会转换成 unicode，如果想要保留中文怎么办？</li><li>有两个磁盘文件 A 和 B，各存放一行字母，要求把这两个文件中的信息合并(按字母顺序排列)，输出到一个新文件 C 中。</li><li>如果当前的日期为 20190530，要求写一个函数输出 N 天后的日期，(比如 N 为 2，则输出 20190601)。</li><li>写一个函数，接收整数参数 n，返回一个函数，函数的功能是把函数的参数和 n 相乘并把结果返回。</li><li>下面代码会存在什么问题，如何改进？<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strappend</span><span class="params">(num)</span>:</span></span><br><span class="line">str = <span class="string">'first'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">str += str(i)</span><br><span class="line"><span class="keyword">return</span> str</span><br></pre></td></tr></table></figure></li><li>一行代码输出 1-100 之间的所有偶数。</li><li>with 语句的作用，写一段代码？</li><li>python 字典和 json 字符串相互转化方法</li><li>请写一个 Python 逻辑，计算一个文件中的大写字母数量</li><li>请写一段 Python连接 Mongo 数据库，然后的查询代码。</li><li>说一说 Redis 的基本类型。</li><li>请写一段 Python连接 Redis 数据库的代码。</li><li>请写一段 Python 连接 MySQL 数据库的代码。</li><li>了解 Redis 的事务么？</li><li>了解数据库的三范式么？</li><li>了解分布式锁么？</li><li>用 Python 实现一个 Reids 的分布式锁的功能。</li><li>写一段 Python 使用 Mongo 数据库创建索引的代码。</li></ol><h2 id="高级特性"><a href="#高级特性" class="headerlink" title="高级特性"></a>高级特性</h2><ol start="70"><li>函数装饰器有什么作用？请列举说明？</li><li>Python 垃圾回收机制？</li><li>魔法函数 <strong>call</strong>怎么使用?</li><li>如何判断一个对象是函数还是方法？</li><li>@classmethod 和@staticmethod 用法和区别</li><li>Python 中的接口如何实现？</li><li>Python 中的反射了解么?</li><li>metaclass 作用？以及应用场景？</li><li>hasattr() getattr() setattr()的用法</li><li>请列举你知道的 Python 的魔法方法及用途。</li><li>如何知道一个 Python 对象的类型？</li><li>Python 的传参是传值还是传址？</li><li>Python 中的元类(metaclass)使用举例</li><li>简述 any()和 all()方法</li><li>filter 方法求出列表所有奇数并构造新列表，a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</li><li>什么是猴子补丁？</li><li>在 Python 中是如何管理内存的？87.当退出 Python 时是否释放所有内存分配？</li></ol><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><ol start="87"><li>使用正则表达式匹配出<code>\&lt;html&gt;\&lt;h1&gt;百度一下，你就知道\&lt;/html&gt;</code>中的地址 a=”张明 98 分”，用 re.sub，将 98 替换为 100</li><li>正则表达式匹配中(.<em>)和(.</em>?)匹配区别？</li><li>写一段匹配邮箱的正则表达式</li></ol><h2 id="其他内容"><a href="#其他内容" class="headerlink" title="其他内容"></a>其他内容</h2><ol start="90"><li>解释一下 python 中 pass 语句的作用？</li><li>简述你对 input()函数的理解</li><li>python 中的 is 和==</li><li>Python 中的作用域</li><li>三元运算写法和应用场景？</li><li>了解 enumerate 么？</li><li>列举 5 个 Python 中的标准模块</li><li>如何在函数中设置一个全局变量</li><li>pathlib 的用法举例</li><li>Python 中的异常处理，写一个简单的应用场景</li><li>Python 中递归的最大次数，那如何突破呢？</li><li>什么是面向对象的 mro</li><li>isinstance 作用以及应用场景？</li><li>什么是断言？应用场景？</li><li>lambda 表达式格式以及应用场景？</li><li>新式类和旧式类的区别</li><li>dir()是干什么用的？</li><li>一个包里有三个模块，demo1.py, demo2.py, demo3.py，但使用 from tools import *导入模块时，如何保证只有 demo1、demo3 被导入了。</li><li>列举 5 个 Python 中的异常类型以及其含义</li><li>copy 和 deepcopy 的区别是什么？</li><li>代码中经常遇到的<em>args, *</em>kwargs 含义及用法。</li><li>Python 中会有函数或成员变量包含单下划线前缀和结尾，和双下划线前缀结尾，区别是什么?</li><li>w、a+、wb 文件写入模式的区别</li><li>举例 sort 和 sorted 的区别</li><li>什么是负索引？</li><li>pprint 模块是干什么的？</li><li>解释一下 Python 中的赋值运算符</li><li>解释一下 Python 中的逻辑运算符</li><li>讲讲 Python 中的位运算符</li><li>在 Python 中如何使用多进制数字？</li><li>怎样声明多个变量并赋值？</li></ol>]]></content>
      
      
      <categories>
          
          <category> Interview </category>
          
          <category> Basicknowledge </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
